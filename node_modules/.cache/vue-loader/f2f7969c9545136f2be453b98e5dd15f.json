{"remainingRequest":"/home/paulo/eclipse-workspace/sisevent-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/paulo/eclipse-workspace/sisevent-front/src/components/CustomersList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/paulo/eclipse-workspace/sisevent-front/src/components/CustomersList.vue","mtime":1563088211584},{"path":"/home/paulo/eclipse-workspace/sisevent-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/paulo/eclipse-workspace/sisevent-front/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/paulo/eclipse-workspace/sisevent-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/paulo/eclipse-workspace/sisevent-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/paulo/eclipse-workspace/sisevent-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport http from \"../http-common\";\n\nexport default {\n  name: \"customers-list\",\n  props: ['msgalert'],\n  data() {\n    return {\n\t  customers: [],\n\t  messageList: \"\",\n\t};\n  },\n  methods: {\n    /* eslint-disable no-console */\n    retrieveCustomers() {\n\t\tlet config = { \n\t\t\theaders: \n\t\t\t\t{ \n\t\t\t\t'Access-Control-Allow-Origin': '*', \n\t\t\t\t'Access-Control-Allow-Methods': 'GET,PUT,PATCH,POST,DELETE', \n\t\t\t\t'Content-Type': 'application/json' \n\t\t\t\t} \n\t\t\t}; \n      http\n        .get(\"/customers\", config)\n        .then(response => {\n          this.customers = response.data; // JSON are parsed automatically.\n\t\t  console.log(response.data);\n\t\t  console.log(\"apos get customers\");\n\t\t  this.messageList = this.$route.params.message;\n\t\t  console.log(this.messageList);\n        })\n        .catch(e => {\n\t\t  console.log(e);\n\t\t  alert(e);\n        });\n\t},\n    refreshList() {\n      this.retrieveCustomers();\n\t},\n\tprintPdf(){\n\t\t\n\t\thttp\n        .get(\"/getCustomerReport\",{\n            responseType: 'arraybuffer',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/pdf'\n            }\n        })\n        .then(response => {\n\t\t\t\n\t\t\t// open in window pdf\n\t\t\t// var blob = new Blob([response.data], {\n          \t//\ttype: 'application/pdf'\n\t\t   \t//});\n\t\t   \t//var url = window.URL.createObjectURL(blob)\n\t\t\t//window.open(url);\n\n\t\t\t//download pdf\n\t\t\tconst url = window.URL.createObjectURL(new Blob([response.data]));\n            const link = document.createElement('a');\n            link.href = url;\n            link.setAttribute('download', 'file.pdf'); //or any other extension\n            document.body.appendChild(link);\n            link.click();\n\t   })\n        .catch(e => {\n\t\t  console.log(e);\n\t\t  alert(e);\n        });\n\t}\n    /* eslint-enable no-console */\n  },\n  mounted() {\n\tthis.retrieveCustomers();\n  },\n  watch: {\n\t$route(to, from){\n\t\tthis.retrieveCustomers();\n\t\tthis.refreshList();\n\t}\n  }\n};\n",{"version":3,"sources":["CustomersList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CustomersList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"mx-auto list\">\n\t\t<Message></Message>\n\t\t<p v-on:click=\"printPdf\"> <a href=\"#\"> Imprimir </a></p>\n\t\t<div class=\"table\">\n\t\t\t<div class=\"tr\">\n\t\t\t\t<div class=\"td\">\n\t\t\t\t\t<h4>Lista de Clientes</h4>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li v-for=\"(customer, index) in customers\" :key=\"index\">\n\t\t\t\t\t\t\t<router-link :to=\"{\n\t\t\t\t\t\t\t\t\tname: 'customer-details',\n\t\t\t\t\t\t\t\t\tparams: { customer: customer, id: customer.id }\n\t\t\t\t\t\t\t\t}\">\n\t\t\t\t\t\t\t\t\t{{customer.name}}\n\t\t\t\t\t\t\t</router-link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"td\">\n\t\t\t\t\t<router-view @refreshData=\"refreshList\"></router-view>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n    </div>\n</template>\n \n<script>\nimport http from \"../http-common\";\n\nexport default {\n  name: \"customers-list\",\n  props: ['msgalert'],\n  data() {\n    return {\n\t  customers: [],\n\t  messageList: \"\",\n\t};\n  },\n  methods: {\n    /* eslint-disable no-console */\n    retrieveCustomers() {\n\t\tlet config = { \n\t\t\theaders: \n\t\t\t\t{ \n\t\t\t\t'Access-Control-Allow-Origin': '*', \n\t\t\t\t'Access-Control-Allow-Methods': 'GET,PUT,PATCH,POST,DELETE', \n\t\t\t\t'Content-Type': 'application/json' \n\t\t\t\t} \n\t\t\t}; \n      http\n        .get(\"/customers\", config)\n        .then(response => {\n          this.customers = response.data; // JSON are parsed automatically.\n\t\t  console.log(response.data);\n\t\t  console.log(\"apos get customers\");\n\t\t  this.messageList = this.$route.params.message;\n\t\t  console.log(this.messageList);\n        })\n        .catch(e => {\n\t\t  console.log(e);\n\t\t  alert(e);\n        });\n\t},\n    refreshList() {\n      this.retrieveCustomers();\n\t},\n\tprintPdf(){\n\t\t\n\t\thttp\n        .get(\"/getCustomerReport\",{\n            responseType: 'arraybuffer',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/pdf'\n            }\n        })\n        .then(response => {\n\t\t\t\n\t\t\t// open in window pdf\n\t\t\t// var blob = new Blob([response.data], {\n          \t//\ttype: 'application/pdf'\n\t\t   \t//});\n\t\t   \t//var url = window.URL.createObjectURL(blob)\n\t\t\t//window.open(url);\n\n\t\t\t//download pdf\n\t\t\tconst url = window.URL.createObjectURL(new Blob([response.data]));\n            const link = document.createElement('a');\n            link.href = url;\n            link.setAttribute('download', 'file.pdf'); //or any other extension\n            document.body.appendChild(link);\n            link.click();\n\t   })\n        .catch(e => {\n\t\t  console.log(e);\n\t\t  alert(e);\n        });\n\t}\n    /* eslint-enable no-console */\n  },\n  mounted() {\n\tthis.retrieveCustomers();\n  },\n  watch: {\n\t$route(to, from){\n\t\tthis.retrieveCustomers();\n\t\tthis.refreshList();\n\t}\n  }\n};\n</script>"]}]}